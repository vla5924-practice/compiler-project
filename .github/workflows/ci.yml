name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  BUILD_TYPE: Release

jobs:
  code-style-check:
    name: Code style check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: DoozyX/clang-format-lint-action@v0.13
      with:
        source: '.'
        exclude: './thirdparty ./docs'
        extensions: 'hpp,cpp'
        clangFormatVersion: 12

  ubuntu-gcc:
    name: Ubuntu GCC build & test
    runs-on: ubuntu-latest
    needs: code-style-check
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Cache LLVM and Clang
      id: cache-llvm
      uses: actions/cache@v2
      with:
        path: ./llvm
        key: llvm-13.0.0
    - name: Install LLVM and Clang
      uses: KyleMayes/install-llvm-action@v1
      with:
        version: "13.0.0"
        cached: ${{ steps.cache-llvm.outputs.cache-hit }}
    - name: Build
      run: |
        mkdir build && cd build
        cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=$BUILD_TYPE ..
        make
    - name: Run tests
      run: |
        cd build
        ctest

  windows-msvc:
    name: Windows MSVC build & test
    runs-on: windows-2022
    needs: code-style-check
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Cache LLVM
      id: cache-llvm
      uses: actions/cache@v2
      with:
        path: ./llvm
        key: llvm-13.0.0-windows
    - name: Install LLVM
      if: ${{ ! steps.cache-llvm.outputs.cache-hit }}
      run: |
        md llvm
        md llvm_build && cd llvm_build
        curl -o llvm.zip https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-13.0.0.zip
        7z x llvm.zip *.*
        md build && cd build
        cmake -DCMAKE_INSTALL_PREFIX=%GITHUB_WORKSPACE%\llvm -DLLVM_PARALLEL_LINK_JOBS=1 -DLLVM_TARGETS_TO_BUILD=X86 -DCMAKE_CXX_STANDARD=17 -Thost=x64 ..\llvm-project-llvmorg-13.0.0\llvm
        cmake --build .
        cmake --build . --target install
        cd %GITHUB_WORKSPACE%
        del /q llvm_build
        del /q llvm\bin
    - name: Build
      run: |
        md build && cd build
        cmake -G "Visual Studio 17 2022" -A x64 -DCMAKE_BUILD_TYPE=%BUILD_TYPE% -DLLVM_DIR=%GITHUB_WORKSPACE%\llvm\lib\cmake\llvm ..
        cmake --build .
    - name: Run tests
      run: |
        cd build
        ctest
